name: Solar System Workflow
on:
    workflow_dispatch:
    push:                        #will automatically trigger as it is push based
        branches:
            - main
            - 'feature/*'

env:    #adding workflow level environemnt variables - uri, username, pwd to access db in mongoose db function to connect to db
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}

jobs:
    unit-testing:              #name of the job
        name: Unit Testing
        strategy:              #using matrix startegy
            matrix:
                nodejs_version: [18,19,20]
                operating_system: [ubuntu_latest, macos_latest]
                exclude:
                - nodejs_version: 18
                  operating_system: macos_latest
        runs-on: ${{matrix.operating_system}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version -${{matrix.nodejs_version}}    #nodejs package is setup with ver 18
          uses: actions/setup-node@v3
          with:
            node-version: ${{matrix.nodejs_version}}

        - name: Install Dependencies   #installing nodejs dependencies using npm
          run: npm install

        - name: Unit Testing      #running unit test using npm test
          id: nodejs-unit-testing-step1 #variable id will hold the output
          run: npm test

        - name: Archive Test Results   #used to store test results file otherwise it will be deleted post execution completion
          #1.consider if above steps fails then also we want to archive/store test results. You can either use if condition or can use always()
          #if: failure() && (steps.nodejs-unit-testing-step1.outcome == 'failure' || steps.nodejs-unit-testing-step1.outcome == 'success')
          if: always() 
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:              #name of the 2nd job
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18   #nodejs package is setup with ver 18
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Install Dependencies   #installing nodejs dependencies using npm
          run: npm install

        - name: Check the code coverage  
          continue-on-error: true    #adding this as the java code contains 90% threshold limit. so what if my code coverage <90%.env:
                                     #i do not want this job to fail and hence adding continue-on-error
          run: npm run coverage

        - name: Archive Test Results   #used to store test results file otherwise it will be deleted post execution completion
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5